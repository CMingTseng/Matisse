/*
 * Copyright 2017 Zhihu Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        agp_gradle = '7.0.4'
        android_gradle_plugin_version = agp_gradle
        kotlin_version = "1.7.20"
        // coroutine
        coroutine_version = "1.6.0"
        kotlin_coroutines_version = coroutine_version
        kotlin_ktor_version = "1.6.2"//2.1.2
        ktx_extensions_version = '2.2.0'
        //AndroidX
        annotation = "1.1.0"//1.4.0
        appcompat = "1.3.1"//1.4.0
        appcompat_version = appcompat
        material = "1.4.0"//1.4.0 //1.7.0 get Can't determine type for tag '<macro name="m3_comp_bottom_app_bar_container_color">?attr/colorSurface</macro> https://stackoverflow.com/questions/74191324/cant-determine-type-for-tag-macro-name-m3-comp-bottom-app-bar-container-colo
        material_version =  material
        cardview_version = "1.0.0"
        constraintLayout = "2.1.4"
        constraintlayout_version = constraintLayout
        navigation_version = "2.5.2" // 2.3.5 <-->androidx.navigation.safeargs    2.4.1<--> androidx.navigation.safeargs.kotlin
        ktx_version = "1.3.1"
        jetpack_windowmanager_version = '1.0.0'
        jetpack_camera_version = '1.1.0'
        camerax_version = jetpack_camera_version
        // activiy ktx
        activity_ktx_version = "1.4.0"
        fragment_version = "1.4.1"//1.3.6 1.4.0 1.4.1
        fragment_ktx_version = fragment_version
        lifecycle_version = "2.4.0"
        recyclerview_version = "1.1.0"
        //AndroidX New UI compose
        compose_version = '1.1.1'
        //Google Service
        google_services_plugin_version = "4.3.14"
        google_services_version = "18.1.0"
        //DI
        // dagger hilt
        dagger_hilt_version = "2.44"
        dagger_hilt_viewmodel_version = "1.0.0-alpha03"
        // koin
        koin_version = "2.2.2"

        gson_version = "2.9.1"

        // http
        retrofit_version = "2.9.0"
        okhttp_version = '4.10.0'
        okhttp_interceptor_version = okhttp_version
        okhttp_logging_version = "4.9.0"

        // timber
        timber_version = '5.0.1'
        // utilcode & utilcodex
        utilcode_version = '1.30.7'
        utilcodex_version = '1.31.0'

        ////airbnb
        //epoxy
        epoxy_version = '4.6.4'
        ////mavericks
        mavericks_version = '2.7.0'
        ////Square
        //sqldelight
        sqldelight_version = '1.5.0'

        //lombok
        lombok_version = '6.5.1'

        compileSdkVersion = 31
        compileSdk = compileSdkVersion
        targetSdkVersion = compileSdk
        targetSdk = targetSdkVersion
        minSdkVersion = 21
        minSdk = minSdkVersion
    }
    repositories {
        google()
        mavenCentral()
        maven {
            url = uri("https://plugins.gradle.org/m2/")
        }
        maven { url 'https://jitpack.io' }
        maven{
            url "https://raw.githubusercontent.com/cybernhl/maven-repository/master/"
        }
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$agp_gradle"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven {
            url = uri("https://plugins.gradle.org/m2/")
        }
        maven { url 'https://jitpack.io' }
        maven{
            url "https://raw.githubusercontent.com/cybernhl/maven-repository/master/"
        }
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
